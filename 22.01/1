import random
# массив поля, * — пустое поле, # — стена
pole = [[0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0]]

# то, что будет выводиться на экран
vidimost_polya=[["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"],
                ["•","•","•","•","•","•","•","•","•","•","•","•"]]

# вывод поля на экран, для любого, абстрактного списка будет работать


def vyvodPolya(spisok):
    for stroka in spisok:
        for kletka in stroka:
            print(kletka,end='')
        print()
        
        
# проверка поля на то, что внутри него
# если поле пустое, проверяются все клетки вокруг него
# если стена — не проверяются
# если поле уже было открыто — оно не проверяется

def check(stroka,stolb):
    # если клетка ещё не открыта
    if vidimost_polya[stroka][stolb] == "•":
        # открываем
        vidimost_polya[stroka][stolb] = pole[stroka][stolb]
        # если оно оказалось пустым
        if pole[stroka][stolb] == "*":
            # проверяем все соседние, только если они существуют
            # а то выйдем за пределы поля, Python ругать будет
            if stroka-1 >= 0:
                check(stroka-1,stolb)
#                 if stolb-1 >= 0:
#                     check(stroka-1,stolb-1)
#                 if stolb+1 < len(pole[stroka]):
#                     check(stroka-1,stolb+1)
                    
            if stroka+1 < len(pole):
                check(stroka+1,stolb)
#                 if stolb-1 >= 0:
#                     check(stroka+1,stolb-1)
#                 if stolb+1 < len(pole[stroka]):
#                     check(stroka+1,stolb+1)
                    
            if stolb-1 >= 0:
                    check(stroka,stolb-1)
            if stolb+1 < len(pole[stroka]):
                check(stroka,stolb+1)
                
def mins():
    for i in range(24):
        x = random.randint(1,11)
        y = random.randint(1,11)
        pole[x][y] = "O"
        #vidimost_polya[x][y] = "O"

def rasst():
    for x in range(len(pole[0])):
        for y in range(len(pole)):
            if pole[y][x] == "O":
                if y-1 >= 0:
                    if pole[y-1][x] != "O":
                        pole[y-1][x] += 1
                    if x-1 >= 0 and pole[y-1][x-1] != "O":
                        pole[y-1][x-1] += 1
                    if x+1 < len(pole[y]) and pole[y-1][x+1] != "O":
                        pole[y-1][x+1] += 1
                        
                if y+1 < len(pole):
                    if pole[y+1][x] != "O":
                        pole[y+1][x] += 1
                    if x-1 >= 0 and pole[y+1][x-1] != "O":
                        pole[y+1][x-1] += 1
                    if x+1 < len(pole[y]) and pole[y+1][x+1] != "O":
                        pole[y+1][x+1] += 1
                        
                if x-1 >= 0 and pole[y][x-1] != "O":
                    pole[y][x-1] += 1
                if x+1 < len(pole[y]) and pole[y][x+1] != "O":
                    pole[y][x+1] += 1
                    
    for x in range(len(pole[0])):
        for y in range(len(pole)):
            if pole[y][x] == 0:
                pole[y][x] = "*"
# добавим проверку, остались ли ещё неоткрытые элементы поля
# функция будет возвращать True, если больше нет
# и False, если ещё остались

def isOpen():
    # считаем, что поле открыто всё
    opened = True
    #для каждой строки в видимости поля
    for i in range(12):
        for j in range(12):
        # если хотя бы в одной нашлось закрытое поле
            if vidimost_polya[i][j] == "•" and pole[i][j] != "O":
            # значит неправда, поле ещё не всё открыто
                opened = False
    return opened

def flag()
    while n != "флажок" or n != "раскрытие":
        n = input("флажок или раскрытие")
    if n == "флажок":
        return True
    else:
        return False
